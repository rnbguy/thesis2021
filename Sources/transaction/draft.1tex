
%% For double-blind review submission, w/o CCS and ACM Reference (max submission space)
\documentclass[acmsmall,screen]{acmart}%\settopmatter{printfolios=true,printccs=false,printacmref=false}
%\pdfoutput=1
%% For double-blind review submission, w/ CCS and ACM Reference
%\documentclass[sigplan,review,anonymous]{acmart}\settopmatter{printfolios=true}
%% For single-blind review submission, w/o CCS and ACM Reference (max submission space)
%\documentclass[sigplan,review]{acmart}\settopmatter{printfolios=true,printccs=false,printacmref=false}
%% For single-blind review submission, w/ CCS and ACM Reference
%\documentclass[sigplan,review]{acmart}\settopmatter{printfolios=true}
%% For final camera-ready submission, w/ required CCS and ACM Reference
%\documentclass[sigplan]{acmart}\settopmatter{}

%% my packages


\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{mathrsfs}
\usepackage{graphicx}
\usepackage{float}
\usepackage{caption}
\usepackage{subcaption,wrapfig}
\usepackage{tikz}
\usetikzlibrary{arrows,automata,positioning,backgrounds,calc}

\usepackage{pifont}
\usepackage[boxed,linesnumbered,noend]{algorithm2e}

%% my definitions

%\newtheorem{theorem}{Theorem}[section]
%\newtheorem{lemma}{Lemma}[section]
%\newtheorem{corollary}{Corollary}[section]
%\newtheorem{remark}{Remark}[section]
%\newtheorem{definition}{Definition}[section]

\newcommand{\eg}{e.g., }
\newcommand{\ie}{i.e., }

\newcommand{\PO}{\textcolor{red}{\textsf{po}}}
\newcommand{\SO}{\textcolor{red}{\textsf{so}}}
\newcommand{\WR}{\textcolor{red}{\textsf{WR}}}
\newcommand{\WW}{\textcolor{red}{\textsf{WW}}}
\newcommand{\RW}{\textcolor{red}{\textsf{RW}}}
\newcommand{\VIS}{\textcolor{red}{\textsf{vis}}}
\newcommand{\CO}{\textcolor{red}{\textsf{co} }}

\newcommand{\axpre}{\mathsf{Prefix}}
\newcommand{\axconf}{\mathsf{Conflict}}
\newcommand{\axsi}{\textsc{Si}}
\newcommand{\axser}{\mathsf{Serializability}}

\newcommand{\ext}{\textsc{Ext}}
\newcommand{\session}{\textsc{Session}}
\newcommand{\transvis}{\textsc{TransVis}}
\newcommand{\prefix}{\textsc{Prefix}}
\newcommand{\noconflict}{\textsc{NoConflict}}
\newcommand{\totalvis}{\textsc{TotalVis}}

\newcommand{\set}[1]{{\{{#1}\}}}
\newcommand{\mset}[1]{{\{\!\{ #1 \}\!\}}}
\newcommand{\tup}[1]{{\left\langle{#1}\right\rangle}}
\renewcommand{\implies}{\Rightarrow}
\newcommand{\pto}{\rightharpoonup}
\newcommand{\To}{\Rightarrow}
\newcommand{\Path}[3]{{#1}\xrightarrow{#2}{#3}}


\newcommand{\Obj}{\mathsf{Obj}}
\newcommand{\Var}{\mathsf{Var}}
\newcommand{\Val}{\mathsf{Val}}
\newcommand{\OId}{\mathsf{OpId}}
\newcommand{\Op}{\mathsf{Op}}
\newcommand{\xvar}{{x}}
\newcommand{\yvar}{{y}}
\newcommand{\val}{{v}}
\newcommand{\id}{{i}}
\newcommand{\rd}[3][]{\textsf{read}_{#1}({#2},{#3})}
\newcommand{\wrt}[3][]{\textsf{write}_{#1}({#2},{#3})}
\newcommand{\op}{{o}}
\newcommand{\Tr}{{\mathcal{T}}}
\newcommand{\tr}{{t}}
\newcommand{\Hist}{{\mathcal{H}}}
\newcommand{\hist}{{h}}
\newcommand{\po}{\textcolor{red}{\mathsf{po}}}
\newcommand{\so}{\textcolor{red}{\mathsf{so}}}
\newcommand{\co}{\textcolor{red}{\mathsf{co}}}
\newcommand{\wro}[1][]{\textcolor{red}{\mathsf{wr}_{#1}}}
\newcommand{\rwo}{\mathsf{RW}}
\newcommand{\wrosi}{\mathsf{WR}}
\newcommand{\readOp}[1]{\mathsf{reads}({#1})}
\newcommand{\vars}[1]{\mathsf{vars}({#1})}
\newcommand{\writeOp}[1]{\mathsf{writes}({#1})}
\newcommand{\writeVar}[2]{{#1}\ \mathsf{writes}\ {#2}}
\newcommand{\readVar}[2]{{#1}\ \mathsf{reads}\ {#2}}
\renewcommand{\hist}{{h}}
\newcommand{\lin}{\textcolor{red}{\mathsf{lin}}}
\newcommand{\vis}{\textcolor{red}{\mathsf{vis}}}
\newcommand{\aread}{\mathsf{r}}
\newcommand{\none}{\mathsf{None}}

%% Conference information
%% Supplied to authors by publisher for camera-ready submission;
%% use defaults for review submission.
\acmConference[PL'18]{ACM SIGPLAN Conference on Programming Languages}{January 01--03, 2018}{New York, NY, USA}
\acmYear{2018}
\acmISBN{} % \acmISBN{978-x-xxxx-xxxx-x/YY/MM}
\acmDOI{} % \acmDOI{10.1145/nnnnnnn.nnnnnnn}
\startPage{1}

%%% If you see 'ACMUNKNOWN' in the 'setcopyright' statement below,
%%% please first submit your publishing-rights agreement with ACM (follow link on submission page).
%%% Then please update our instructions page and copy-and-paste the NEW commands into your article.
%%% Please contact us in case of questions; allow up to 10 min for the system to propagate the information.
%%%
%%% The following is specific to OOPSLA '19 and the paper
%%% 'On the Complexity of Checking Transactional Consistency'
%%% by Ranadeep Biswas and Constantin Enea.
%%%
\setcopyright{ACMUNKNOWN}
\acmPrice{}
\acmDOI{10.1145/3360591}
\acmYear{2019}
\copyrightyear{2019}
\acmJournal{PACMPL}
\acmVolume{3}
\acmNumber{OOPSLA}
\acmArticle{165}
\acmMonth{10}

%% Bibliography style
\bibliographystyle{ACM-Reference-Format}
%% Citation style
\citestyle{acmauthoryear}  %% For author/year citations
%\citestyle{acmnumeric}     %% For numeric citations
%\setcitestyle{nosort}      %% With 'acmnumeric', to disable automatic
                            %% sorting of references within a single citation;
                            %% e.g., \cite{Smith99,Carpenter05,Baker12}
                            %% rendered as [14,5,2] rather than [2,5,14].
%\setcitesyle{nocompress}   %% With 'acmnumeric', to disable automatic
                            %% compression of sequential references within a
                            %% single citation;
                            %% e.g., \cite{Baker12,Baker14,Baker16}
                            %% rendered as [2,3,4] rather than [2-4].


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Note: Authors migrating a paper from traditional SIGPLAN
%% proceedings format to PACMPL format must update the
%% '\documentclass' and topmatter commands above; see
%% 'acmart-pacmpl-template.tex'.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% Some recommended packages.
\usepackage{booktabs}   %% For formal tables:
                        %% http://ctan.org/pkg/booktabs
\usepackage{subcaption} %% For complex figures with subfigures/subcaptions
                        %% http://ctan.org/pkg/subcaption

\renewcommand{\circ}{\mathop{;}}

\begin{document}

%% Title information
\title{On the Complexity of Checking Transactional Consistency}         %% [Short Title] is optional;
%% when present, will be used in
%% header instead of Full Title.
%\titlenote{with title note}             %% \titlenote is optional;
%% can be repeated if necessary;
%% contents suppressed with 'anonymous'
%\subtitle{}                     %% \subtitle is optional
%\subtitlenote{with subtitle note}       %% \subtitlenote is optional;
%% can be repeated if necessary;
%% contents suppressed with 'anonymous'


%% Author information
%% Contents and number of authors suppressed with 'anonymous'.
%% Each author should be introduced by \author, followed by
%% \authornote (optional), \orcid (optional), \affiliation, and
%% \email.
%% An author may have multiple affiliations and/or emails; repeat the
%% appropriate command.
%% Many elements are not rendered, but should be provided for metadata
%% extraction tools.

%% Author with single affiliation.
\author{Ranadeep Biswas}
\affiliation{
 \position{PhD Student}
 \institution{Universite de Paris, IRIF, CNRS}            %% \institution is required
 \city{Paris}
 \postcode{F-75013}
 \country{France}                    %% \country is recommended
}
\email{ranadeep@irif.fr}          %% \email is recommended

%% Author with two affiliations and emails.
\author{Constantin Enea}
\affiliation{
 \position{Associate Professor}
 \institution{Universite de Paris, IRIF, CNRS}            %% \institution is required
 \city{Paris}
 \postcode{F-75013}
 \country{France}                    %% \country is recommended
}
\email{cenea@irif.fr}

%% Abstract
%% Note: \begin{abstract}...\end{abstract} environment must come
%% before \maketitle command
\begin{abstract}
 Transactions simplify concurrent programming by enabling computations on shared data that are isolated from other concurrent computations and are resilient to failures. Modern databases provide different consistency models for transactions corresponding to different tradeoffs between consistency and availability. In this work, we investigate the problem of checking whether a given execution of a transactional database adheres to some consistency model. We show that consistency models like read committed, read atomic, and causal consistency are polynomial-time checkable while prefix consistency and snapshot isolation are NP-complete in general. These results complement a previous NP-completeness result concerning serializability. Moreover, in the context of NP-complete consistency models, we devise algorithms that are polynomial time assuming that certain parameters in the input executions, e.g., the number of sessions, are fixed. We evaluate the scalability of these algorithms in the context of several production databases.
\end{abstract}


%% 2012 ACM Computing Classification System (CSS) concepts
%% Generate at 'http://dl.acm.org/ccs/ccs.cfm'.
\begin{CCSXML}
 <ccs2012>
 <concept>
 <concept_id>10002944.10011123.10011675</concept_id>
 <concept_desc>General and reference~Validation</concept_desc>
 <concept_significance>500</concept_significance>
 </concept>
 <concept>
 <concept_id>10002951.10002952.10003190.10003195.10010836</concept_id>
 <concept_desc>Information systems~Key-value stores</concept_desc>
 <concept_significance>500</concept_significance>
 </concept>
 <concept>
 <concept_id>10003752.10003790.10002990</concept_id>
 <concept_desc>Theory of computation~Logic and verification</concept_desc>
 <concept_significance>500</concept_significance>
 </concept>
 <concept>
 <concept_id>10011007.10010940.10010992.10010993.10010996</concept_id>
 <concept_desc>Software and its engineering~Consistency</concept_desc>
 <concept_significance>500</concept_significance>
 </concept>
 <concept>
 <concept_id>10011007.10010940.10010992.10010998.10011001</concept_id>
 <concept_desc>Software and its engineering~Dynamic analysis</concept_desc>
 <concept_significance>500</concept_significance>
 </concept>
 <concept>
 <concept_id>10011007.10011074.10011099.10011692</concept_id>
 <concept_desc>Software and its engineering~Formal software verification</concept_desc>
 <concept_significance>500</concept_significance>
 </concept>
 </ccs2012>
\end{CCSXML}

\ccsdesc[500]{General and reference~Validation}
\ccsdesc[500]{Information systems~Key-value stores}
\ccsdesc[500]{Theory of computation~Logic and verification}
\ccsdesc[500]{Software and its engineering~Consistency}
\ccsdesc[500]{Software and its engineering~Dynamic analysis}
\ccsdesc[500]{Software and its engineering~Formal software verification}
%% End of generated code


%% Keywords
%% comma separated list
\keywords{transactional databases, consistency, axiomatic specifications, testing}  %% \keywords are mandatory in final camera-ready submission


%% \maketitle
%% Note: \maketitle command must come after title commands, author
%% commands, abstract environment, Computing Classification System
%% environment and commands, and keywords command.
\maketitle

\input{introduction}
%\input{overview}
\input{criteria}
%\input{sec3-temp}
\input{algorithms}
\input{experiments}
\input{related}

\section{Conclusions}

Our results provide an effective means of checking the correctness of transactional databases with respect to a wide range of consistency criteria, in an efficient way. We devise a new specification framework for these criteria, which besides enabling efficient verification algorithms, provide a novel understanding of the differences between them in terms of set of transactions that \emph{must} be committed before a transaction which is read during the execution. These algorithms are shown to be scalable and orders of magnitude more efficient than standard SAT encodings of these criteria (as defined in our framework). While the algorithms are quite simple to understand and implement, the proof of their correctness is non-trivial and benefits heavily from the new specification framework. One important venue for future work is identifying root causes for a given violation. The fact that we are able to deal with a wide range of criteria is already helpful in identifying the weakest criterion that is violated in a given execution.  Then, in the case of RC, RA, and CC, where inconsistencies correspond to cycles in the commit order, the root cause could be attributed to a minimal cycle in this relation. We did this in our communication with the Antidote developers to simplify the violation we found which contained 42 transactions. In the case of PC, SI, and SER, it could be possible to implement a search procedure similar to CDCL in SAT solvers, in order to compute the root-cause as a SAT solver would compute an unsatisfiability core. 

%%% Acknowledgments
%\begin{acks}                            %% acks environment is optional
%                                        %% contents suppressed with 'anonymous'
%  %% Commands \grantsponsor{<sponsorID>}{<name>}{<url>} and
%  %% \grantnum[<url>]{<sponsorID>}{<number>} should be used to
%  %% acknowledge financial support and will be used by metadata
%  %% extraction tools.
%  This material is based upon work supported by the
%  \grantsponsor{GS100000001}{National Science
%    Foundation}{http://dx.doi.org/10.13039/100000001} under Grant
%  No.~\grantnum{GS100000001}{nnnnnnn} and Grant
%  No.~\grantnum{GS100000001}{mmmmmmm}.  Any opinions, findings, and
%  conclusions or recommendations expressed in this material are those
%  of the author and do not necessarily reflect the views of the
%  National Science Foundation.
%\end{acks}


%% Bibliography
%\bibliography{bibfile}


%% Appendix


%\clearpage
\appendix
\input criteria-app
%\input checking-app
%%\input np-app
%%\input pc_red-app
%\input pc_red-app-short
%\input si_red-app
%\input gotsman

\begin{acks}

 This work is supported in part by the European Research Council (ERC) under the European Union’s Horizon 2020 research and innovation programme (grant agreement No 678177).
 
\end{acks}


%\clearpage
\bibliography{dblp,misc}

\end{document}
